user_dir: "."  # relative to this file
input_files: [ ]
output_dir: "output"

pipeline:
  general:
    buffer_size: 100
  preprocess:
    downsample:
      transformer: cala.streaming.nodes.preprocess.Downsampler
      params:
        method: mean
        dimensions: [ width, height ]
        strides: [ 2, 2 ]

    denoise:
      transformer: cala.streaming.nodes.preprocess.Denoiser
      params:
        method: gaussian
        kwargs:
          ksize: [ 3, 3 ]
          sigmaX: 1.5
      requires: [ downsample ]

    glow_removal:
      transformer: cala.streaming.nodes.preprocess.GlowRemover
      params:
        learning_rate: 0.1
      requires: [ denoise ]

    motion_stabilization:
      transformer: cala.streaming.nodes.preprocess.RigidStabilizer
      params:
        drift_speed: 1
        anchor_frame_index: 0
      requires: [ glow_removal ]

  initialization:
    footprints:
      transformer: cala.streaming.nodes.init.common.FootprintsInitializer
      params:
        threshold_factor: 0.5
        kernel_size: 3
        distance_metric: 2 # cv2.DIST_L2
        distance_mask_size: 5

    traces:
      transformer: cala.streaming.nodes.init.common.TracesInitializer
      params: { }
      n_frames: 3
      requires: [ footprints ]

    pixel_stats:
      transformer: cala.streaming.nodes.init.odl.PixelStatsInitializer
      params: { }
      n_frames: 3
      requires: [ traces ]

    component_stats:
      transformer: cala.streaming.nodes.init.odl.ComponentStatsInitializer
      params: { }
      n_frames: 3
      requires: [ traces ]

    residual:
      transformer: cala.streaming.nodes.init.odl.ResidualInitializer
      params:
        buffer_length: 3
      n_frames: 3
      requires: [ footprints, traces ]

    overlap_groups:
      transformer: cala.streaming.nodes.init.odl.OverlapsInitializer
      params: { }
      requires: [ footprints ]

  iteration:
    traces:
      transformer: cala.streaming.nodes.iter.TracesUpdater
      params:
        tolerance: 0.001

    pixel_stats:
      transformer: cala.streaming.nodes.iter.PixelStatsUpdater
      params: { }
      requires: [ traces ]

    component_stats:
      transformer: cala.streaming.nodes.iter.ComponentStatsUpdater
      params: { }
      requires: [ traces ]

    detect:
      transformer: cala.streaming.nodes.iter.Detector
      params:
        num_nmf_residual_frames: 10
        gaussian_std: 4.0
        spatial_threshold: 0.8
        temporal_threshold: 0.8
      requires: [ pixel_stats, component_stats ]

    footprints:
      transformer: cala.streaming.nodes.iter.FootprintsUpdater
      params:
        boundary_expansion_pixels: 1
      requires: [ detect ]

    overlaps:
      transformer: cala.streaming.nodes.iter.OverlapsUpdater
      params: { }
      requires: [ footprints ]
